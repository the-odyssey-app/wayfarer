name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Mobile App CI
  mobile-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./wayfarer-mobile
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ./wayfarer-mobile/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Run type checking
      run: npm run type-check
    
    - name: Run tests
      run: npm run test
    
    - name: Build for testing
      run: npm run build

  # Backend CI
  backend-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./wayfarer-backend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ./wayfarer-backend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Run type checking
      run: npm run type-check
    
    - name: Run tests
      run: npm run test
    
    - name: Validate Convex schema
      run: npm run validate-schema

  # Code Quality Audit
  code-quality:
    runs-on: ubuntu-latest
    needs: [mobile-ci, backend-ci]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security audit
      run: |
        cd wayfarer-mobile && npm audit --audit-level moderate
        cd ../wayfarer-backend && npm audit --audit-level moderate
    
    - name: Check for TODO/FIXME comments
      run: |
        echo "Checking for TODO/FIXME comments..."
        grep -r "TODO\|FIXME" wayfarer-mobile/src/ || true
        grep -r "TODO\|FIXME" wayfarer-backend/convex/ || true

  # Deploy to staging (on develop branch)
  deploy-staging:
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    needs: [mobile-ci, backend-ci, code-quality]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        # Add deployment commands here
